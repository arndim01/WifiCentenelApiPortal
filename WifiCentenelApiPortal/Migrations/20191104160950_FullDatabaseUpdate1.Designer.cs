// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WifiCentenelApiPortal.Context;

namespace WifiCentenelApiPortal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191104160950_FullDatabaseUpdate1")]
    partial class FullDatabaseUpdate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("CRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("CRoleClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CUserClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("CUserLogin");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("CUserRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("CUserToken");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IdentityId");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Ap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("LocationApRefId");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LocationApRefId");

                    b.ToTable("Aps");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("UserType")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("CUser");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.CoinIdentity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AmountCode");

                    b.Property<double>("AmountIdentity")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("CoinIdentities");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.CoinLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CoinIdentityRef");

                    b.Property<long>("DeviceRef");

                    b.Property<DateTime>("InsertedDate");

                    b.HasKey("Id");

                    b.HasIndex("CoinIdentityRef");

                    b.HasIndex("DeviceRef");

                    b.ToTable("CoinLogs");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Device", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Hostname")
                        .HasMaxLength(250);

                    b.Property<string>("IdentityId");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.InternetAuthorization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("DeviceRef");

                    b.Property<DateTime>("EndDateAuthorized");

                    b.HasKey("Id");

                    b.HasIndex("DeviceRef");

                    b.ToTable("InternetAuthorizations");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.LegalTerms", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AcceptDate");

                    b.Property<bool>("AcceptTerms");

                    b.Property<string>("IdentityId");

                    b.Property<string>("TermsLink");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.ToTable("LegalTerms");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(250);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.LocationAp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("LocationRefId");

                    b.HasKey("Id");

                    b.HasIndex("LocationRefId");

                    b.ToTable("LocationAps");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.LocationStation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("LocationRefId");

                    b.HasKey("Id");

                    b.HasIndex("LocationRefId");

                    b.ToTable("LocationStations");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BandwidthDown");

                    b.Property<int>("BandwidthUp");

                    b.Property<long>("CoinIdentityRefId");

                    b.Property<long>("StationRefId");

                    b.Property<int>("TotalMinutes");

                    b.HasKey("Id");

                    b.HasIndex("CoinIdentityRefId");

                    b.HasIndex("StationRefId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Station", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IdentityId");

                    b.Property<long>("LocationStationRefId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.HasIndex("LocationStationRefId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WifiCentenelApiPortal.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Account", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.ApplicationUser", "Identity")
                        .WithMany()
                        .HasForeignKey("IdentityId");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Ap", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.LocationAp")
                        .WithMany("Aps")
                        .HasForeignKey("LocationApRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.CoinLog", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.CoinIdentity", "CoinIdentity")
                        .WithMany()
                        .HasForeignKey("CoinIdentityRef")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WifiCentenelApiPortal.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceRef")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Device", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.ApplicationUser", "Identity")
                        .WithMany()
                        .HasForeignKey("IdentityId");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.InternetAuthorization", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceRef")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.LegalTerms", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.ApplicationUser", "Identity")
                        .WithMany()
                        .HasForeignKey("IdentityId");
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.LocationAp", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.LocationStation", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Price", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.CoinIdentity", "CoinIdentity")
                        .WithMany()
                        .HasForeignKey("CoinIdentityRefId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WifiCentenelApiPortal.Models.Station")
                        .WithMany("Prices")
                        .HasForeignKey("StationRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WifiCentenelApiPortal.Models.Station", b =>
                {
                    b.HasOne("WifiCentenelApiPortal.Models.ApplicationUser", "Identity")
                        .WithMany()
                        .HasForeignKey("IdentityId");

                    b.HasOne("WifiCentenelApiPortal.Models.LocationStation")
                        .WithMany("Stations")
                        .HasForeignKey("LocationStationRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
